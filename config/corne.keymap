/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "balanced"; };

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <32 33>;
        };

        erase_word {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <7 8 9>;
        };

        delete_word {
            bindings = <&kp LC(DELETE)>;
            key-positions = <31 32 33>;
        };

        caps {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        toggle_game_layer {
            bindings = <&tog 0>;
            key-positions = <0 11>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <4 17>;
        };

        quit {
            bindings = <&kp LA(F4)>;
            key-positions = <0 38>;
        };

        TOREVIT {
            bindings = <&to 2>;
            key-positions = <23 35>;
        };
    };

    behaviors {
        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    macros {
        WALL: REVIT1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_press>, <&kp W &kp A>;

            label = "REVIT1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC           &kp Q  &kp W  &kp E     &kp R    &kp T             &kp Y                         &kp U  &kp I         &kp O    &kp P          &kp BACKSPACE
&kp LSHFT         &kp A  &kp S  &kp D     &kp F    &kp G             &kp H                         &kp J  &kp K         &kp L    &kp SEMICOLON  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V    &kp B             &kp N                         &kp M  &kp COMMA     &kp DOT  &kp FSLH       &kp CAPS
                                &kp LGUI  &kp TAB  &mt LALT SPACE    &mt LA(LC(LEFT_SHIFT)) ENTER  &to 1  &kp LEFT_GUI
            >;
        };

        layer_6 {
            bindings = <
&to 0   &kp C_PP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp UP_ARROW    &trans       &kp TILDE  &kp APOS      &trans        &kp N7  &kp N8  &kp N9
&trans  &trans    &kp DELETE         &kp LEFT         &kp DOWN_ARROW  &kp RIGHT    &kp COMMA  &kp DOT       &trans        &kp N4  &kp N5  &kp N6
&trans  &trans    &kp F1             &kp F2           &kp F3          &kp F4       &kp EXCL   &kp QUESTION  &trans        &kp N1  &kp N2  &kp N3
                                     &trans           &trans          &kp SPACE    &kp ENTER  &trans        &kp NUMBER_0
            >;
        };

        REVIT {
            bindings = <
&WALL   &trans  &trans  &trans  &trans  &trans       &trans     &trans   &trans  &kp N7  &kp N8  &kp N9
&trans  &trans  &trans  &trans  &trans  &trans       &trans     &trans   &trans  &kp N4  &kp N5  &kp N6
&trans  &trans  &trans  &trans  &trans  &trans       &trans     &trans   &trans  &kp N1  &kp N2  &kp N3
                        &trans  &trans  &kp SPACE    &kp ENTER  &kp DOT  &kp N0
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        functions {
            if-layers = <1 1>;
            then-layer = <1>;
        };
    };
};
