/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "balanced"; };

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <5 6>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <17 18>;
        };

        delete_word {
            bindings = <&kp LC(DELETE)>;
            key-positions = <4 7>;
        };

        TOREVIT {
            bindings = <&tog 3>;
            key-positions = <36 41>;
        };

        qwerty {
            bindings = <&tog 0>;
            key-positions = <37 40>;
        };

        numbermode {
            bindings = <&tog 2>;
            key-positions = <38 39>;
        };

        AGUDO {
            bindings = <&kp APOS>;
            key-positions = <12 10>;
        };

        CIRCUNFLEXO {
            bindings = <&kp CARET>;
            key-positions = <12 34>;
        };

        TIL {
            bindings = <&kp TILDE>;
            key-positions = <12 22>;
        };
    };

    behaviors {
        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    macros {
        REVITWALL: REVIT1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp A>;
            label = "REVIT1";
        };

        REVITDOOR: REVITDOOR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp R>;
            label = "REVITDOOR";
        };

        REVITWINDOW: REVITWINDOW {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp N>;
            label = "REVITWINDOW";
        };

        REVITPAINT: REVITPAINT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp T>;
            label = "REVITPAINT";
        };

        REVITCOPYS: REVITCOPYS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp S>;
            label = "REVITCOPYS";
        };

        REVITCOPY: REVITCOPY {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp C>;
            label = "REVITCOPY";
        };

        REVITSLICE: REVITSLICE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp L>;
            label = "REVITSLICE";
        };

        REVITSELPLAN: REVITSELPLAN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp K>;
            label = "REVITSELPLAN";
        };

        REVITFLOOR: REVITFLOOR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp L>;
            label = "REVITFLOOR";
        };

        REVITCOMP: REVITCOMP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp M>;
            label = "REVITCOMP";
        };

        REVITDETAILLINE: REVITDETAILLINE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp L>;
            label = "REVITDETAILLINE";
        };

        REVITDIMENSION: REVITDIMENSION {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp M>;
            label = "REVITDIMENSION";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC           &kp Q  &kp W  &kp E     &kp R    &kp T             &kp Y                         &kp U  &kp I         &kp O    &kp P          &kp BACKSPACE
&kp LSHFT         &kp A  &kp S  &kp D     &kp F    &kp G             &kp H                         &kp J  &kp K         &kp L    &kp SEMICOLON  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V    &kp B             &kp N                         &kp M  &kp COMMA     &kp DOT  &kp FSLH       &kp CAPS
                                &kp LGUI  &kp TAB  &mt LALT SPACE    &mt LA(LC(LEFT_SHIFT)) ENTER  &to 1  &kp LEFT_GUI
            >;
        };

        layer_6 {
            bindings = <
&to 0   &kp C_PP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp UP_ARROW    &trans       &kp TILDE  &kp APOS      &trans        &kp N7  &kp N8  &kp N9
&trans  &trans    &kp DELETE         &kp LEFT         &kp DOWN_ARROW  &kp RIGHT    &kp COMMA  &kp DOT       &trans        &kp N4  &kp N5  &kp N6
&trans  &trans    &kp F1             &kp F2           &kp F3          &kp F4       &kp EXCL   &kp QUESTION  &trans        &kp N1  &kp N2  &kp N3
                                     &trans           &trans          &kp SPACE    &kp ENTER  &trans        &kp NUMBER_0
            >;
        };

        gaming {
            bindings = <
&trans  &trans  &kp W   &trans  &trans            &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp A   &kp S   &kp D   &trans            &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &kp G   &kp LEFT_CONTROL  &kp SPACE    &trans  &trans  &trans
            >;
        };

        REVIT {
            bindings = <
&kp ESC           &REVITWALL   &REVITDOOR     &REVITWINDOW  &REVITCOMP        &trans       &kp N7     &kp N8   &kp N9  &trans  &kp DEL  &kp BSPC
&kp LEFT_SHIFT    &REVITPAINT  &REVITCOPYS    &REVITCOPY    &REVITDETAILLINE  &trans       &kp N4     &kp N5   &kp N6  &trans  &trans   &trans
&kp LEFT_CONTROL  &REVITSLICE  &REVITSELPLAN  &REVITFLOOR   &REVITDIMENSION   &trans       &kp N1     &kp N2   &kp N3  &trans  &trans   &trans
                                              &kp ENTER     &kp TAB           &kp SPACE    &kp ENTER  &kp DOT  &kp N0
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        functions {
            if-layers = <1 1>;
            then-layer = <1>;
        };
    };
};
